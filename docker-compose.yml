
services:
  # Servicio PostgreSQL (Ajustado para 512MB RAM)
  db-srv:
    image: postgres:17-alpine
    container_name: rms-db
    env_file:
      - ./.env
    environment:
      POSTGRES_SHARED_BUFFERS: 128MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 384MB
      POSTGRES_WORK_MEM: 4MB
      POSTGRES_MAINTENANCE_WORK_MEM: 64MB
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    volumes:
      - db_vol:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - prod_net

  # Servicio Redis (Limitado a 128MB)
  broker-srv:
    image: redis:alpine
    container_name: rms-redis
    command: redis-server --maxmemory 128mb --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M
    volumes:
      - redis_vol:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - prod_net

  # Servicio Django + Gunicorn (1 CPU, 1GB RAM)
  app-srv:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rms-app
    env_file:
      - ./.env
    environment:
      # --- VARIABLES DE ENTORNO PARA REDIS ---
      REDIS_HOST: broker-srv
      REDIS_PORT: 6379
      # ---------------------------------------
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    command: >
      sh -c "gunicorn viajero_plus.wsgi:application
      --bind 0.0.0.0:8000
      --workers 2
      --threads 2
      --worker-class gthread
      --timeout 120
      --max-requests 500
      --max-requests-jitter 50"
    volumes:
      - ./viajero_plus:/app/viajero_plus/
      - static_vol:/app/staticfiles
      - media_vol:/app/mediafiles
    depends_on:
      db-srv:
        condition: service_healthy
      broker-srv:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - prod_net

  # Servicio Nginx (128MB RAM)
  rp-srv:
    image: nginx:alpine
    container_name: rms-nginx
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - media_vol:/app/mediafiles:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certs:/etc/nginx/ssl:ro
      - static_vol:/app/staticfiles:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      app-srv:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - prod_net

# Vol√∫menes y redes
volumes:
  db_vol:
    driver: local
  static_vol:
    driver: local
  media_vol:
    driver: local
  redis_vol:
    driver: local

networks:
  prod_net:
    driver: bridge
