upstream django_app {
    server app-srv:8000;
}

# Redirecci√≥n HTTP a HTTPS para ambos dominios
server {
    listen 80;
    server_name rms.travel-sys.loc rms.travel-sys.com;
    return 301 https://$host$request_uri;
}

# Bloque de servidor para rms.travel-sys.loc (Permite acceso a /admin/)
server {
    listen 443 ssl http2;
    server_name rms.travel-sys.loc;

    ssl_certificate /etc/nginx/ssl/cloudflare.pem;
    ssl_certificate_key /etc/nginx/ssl/cloudflare.key;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Permite el acceso a /admin/ desde .loc
    location /admin/ {
        proxy_pass http://django_app;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    }

    location /static/ {
        alias /app/staticfiles/;
        expires 365d;
        access_log off;
    }

    location /media/ {
        alias /app/mediafiles/;
        expires 30d;
        access_log off;
    }

    location / {
        proxy_pass http://django_app;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    }
}

# Bloque de servidor para rms.travel-sys.com (Deniega acceso a /admin/)
server {
    listen 443 ssl http2;
    server_name rms.travel-sys.com;

    ssl_certificate /etc/nginx/ssl/cloudflare.pem;
    ssl_certificate_key /etc/nginx/ssl/cloudflare.key;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Deniega el acceso a /admin/ desde .com
    location /admin/ {
        return 403; # Retorna un error 403 Forbidden
    }

    # Deniega el acceso a /health/ desde .com
    location /health/ {
        return 403; # Retorna un error 403 Forbidden
    }

    location /static/ {
        alias /app/staticfiles/;
        expires 365d;
        access_log off;
    }

    location /media/ {
        alias /app/mediafiles/;
        expires 30d;
        access_log off;
    }

    location / {
        proxy_pass http://django_app;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    }
}
